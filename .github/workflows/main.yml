name: Deploy to VPS (npm + ssh-deploy)

on:
  push:
    branches: ["main"]
  workflow_dispatch:

permissions:
  contents: read

concurrency:
  group: "deploy-vps"
  cancel-in-progress: false

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'

      - name: Verify node & npm
        run: |
          node -v
          npm -v

      - name: Allow non-strict engines (avoid EBADENGINE fatal)
        run: npm config set engine-strict false

      - name: Install dependencies
        run: npm install --no-audit --no-fund

      - name: Build project
        run: npm run build

      - name: Detect output directory
        id: detect-dir
        run: |
          if [ -d "dist" ]; then
            echo "dir=dist" >> $GITHUB_OUTPUT
          elif [ -d "out" ]; then
            echo "dir=out" >> $GITHUB_OUTPUT
          elif [ -d "build" ]; then
            echo "dir=build" >> $GITHUB_OUTPUT
          else
            echo "No build output directory found (checked dist/ out/ build/)."
            exit 1
          fi
      - name: Show detected dir
        run: echo "Detected build dir: ${{ steps.detect-dir.outputs.dir }}"

      # Optional: test SSH connection (keeps workflow robust)
      - name: Test SSH connection (fast)
        uses: appleboy/ssh-action@v0.1.7
        with:
          host: ${{ secrets.VPS_HOST }}
          username: ${{ secrets.VPS_USER }}
          key: ${{ secrets.VPS_SSH_KEY }}
          script: |
            echo "SSH OK: $(whoami)@$(hostname)"
        continue-on-error: false

      - name: Deploy to VPS via ssh-deploy (rsync)
        uses: easingthemes/ssh-deploy@main
        with:
          SSH_PRIVATE_KEY: ${{ secrets.VPS_SSH_KEY }}
          REMOTE_HOST: ${{ secrets.VPS_HOST }}
          REMOTE_USER: ${{ secrets.VPS_USER }}
          TARGET: ${{ secrets.VPS_SITE_PATH }}
          SOURCE: ${{ steps.detect-dir.outputs.dir }}/
          ARGS: -avz --delete

      - name: Post-deploy check (optional)
        run: |
          echo "Deployed to ${{ secrets.VPS_HOST }}:${{ secrets.VPS_SITE_PATH }}"